#include <Arduino.h>
#include <avr/pgmspace.h>

const unsigned char UBLOX_INIT[] PROGMEM = {
    // Disable NMEA
    0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0x00, 0x24,  // GxGGA off
    0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0x01, 0x2B,  // GxGLL off
    0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0xF0, 0x02, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0x02, 0x32,  // GxGSA off
    0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0x03, 0x39,  // GxGSV off
    0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0xF0, 0x04, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0x04, 0x40,  // GxRMC off
    0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0xF0, 0x05, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0x05, 0x47,  // GxVTG off

    // Disable UBX
    0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0x01, 0x07, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x17, 0xDC,  // NAV-PVT off
    0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x12, 0xB9,  // NAV-POSLLH off
    0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x13, 0xC0,  // NAV-STATUS off

    // Enable UBX
    0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0x01, 0x07, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x18, 0xE1,  // NAV-PVT on
    // 0xB5,0x62,0x06,0x01,0x08,0x00,0x01,0x02,0x00,0x01,0x00,0x00,0x00,0x00,0x13,0xBE,
    // //NAV-POSLLH on
    // 0xB5,0x62,0x06,0x01,0x08,0x00,0x01,0x03,0x00,0x01,0x00,0x00,0x00,0x00,0x14,0xC5,
    // //NAV-STATUS on

    // Rate
    0xB5, 0x62, 0x06, 0x08, 0x06, 0x00, 0x64, 0x00, 0x01, 0x00, 0x01, 0x00,
    0x7A, 0x12,  //(10Hz)
    // 0xB5,0x62,0x06,0x08,0x06,0x00,0xC8,0x00,0x01,0x00,0x01,0x00,0xDE,0x6A,
    // //(5Hz)
    // 0xB5,0x62,0x06,0x08,0x06,0x00,0xE8,0x03,0x01,0x00,0x01,0x00,0x01,0x39
    // //(1Hz)

    // Baud
    // 0xB5,0x62,0x06,0x00,0x14,0x00,0x01,0x00,0x00,0x00,0xD0,0x08,0x00,0x00,0x00,0x96,0x00,0x00,
    // 0x23,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0xAF,0x70, //38400
    0xB5, 0x62, 0x06, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0xD0, 0x08,
    0x00, 0x00, 0x00, 0xC2, 0x01, 0x00, 0x23, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xDC, 0x5E,  // 115200

    // Navigation Mode
    // 0xB5,0x62,0x06,0x24,0x24,0x00,0xFF,0xFF,0x04,0x03,0x00,0x00,0x00,0x00,0x10,0x27,0x00,0x00,
    // 0x05,0x00,0xFA,0x00,0xFA,0x00,0x64,0x00,0x2C,0x01,0x00,0x00,0x00,0x00,0x10,0x27,0x00,0x00,
    // 0x00,0x00,0x00,0x00,0x00,0x00,0x4B,0x97  // Automotive

    // Save Config
    // 0xB5, 0x62, 0x06, 0x09, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    // 0x17, 0x31, 0xBF // Not working

};

const unsigned char UBX_HEADER[] = {0xB5, 0x62};

struct NAV_PVT {
  unsigned char cls;
  unsigned char id;
  unsigned short len;
  unsigned long i_tow;  // GPS time of week of the navigation epoch (ms)

  unsigned short year;      // Year (UTC)
  unsigned char month;      // Month, range 1..12 (UTC)
  unsigned char day;        // Day of month, range 1..31 (UTC)
  unsigned char hour;       // Hour of day, range 0..23 (UTC)
  unsigned char minute;     // Minute of hour, range 0..59 (UTC)
  unsigned char second;     // Seconds of minute, range 0..60 (UTC)
  char valid;               // Validity Flags (see graphic below)
  unsigned long time_acc;   // Time accuracy estimate (UTC) (ns)
  long nano;                // Fraction of second, range -1e9 .. 1e9 (UTC) (ns)
  unsigned char fix_type;   // GNSSfix Type, range 0..5
  char flags;               // Fix Status Flags
  unsigned char reserved1;  // reserved
  unsigned char num_sv;     // Number of satellites used in Nav Solution

  long lon;               // Longitude (deg)
  long lat;               // Latitude (deg)
  long height;            // Height above Ellipsoid (mm)
  long height_msl;        // Height above mean sea level (mm)
  unsigned long hor_acc;  // Horizontal Accuracy Estimate (mm)
  unsigned long ver_acc;  // Vertical Accuracy Estimate (mm)

  long vel_n;                 // NED north velocity (mm/s)
  long vel_e;                 // NED east velocity (mm/s)
  long vel_d;                 // NED down velocity (mm/s)
  long gnd_speed;             // Ground Speed (2-D) (mm/s)
  long heading;               // Heading of motion 2-D (deg)
  unsigned long s_acc;        // Speed Accuracy Estimate
  unsigned long heading_acc;  // Heading Accuracy Estimate
  unsigned short p_dop;       // Position dilution of precision
  short reserved2;            // Reserved
  unsigned long reserved3;    // Reserved
  unsigned char dummy[8];
};

void CalcChecksum(unsigned char* CK, NAV_PVT pvt);
void InitGPS();
bool ProcessGPS(NAV_PVT* pvt);
